% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchMaxPool.R
\name{pipeop_torch_max_pool1d}
\alias{pipeop_torch_max_pool1d}
\alias{PipeOpTorchMaxPool1D}
\title{1D Max Pooling}
\format{
\link[R6:R6Class]{R6::R6Class} inheriting from \link{PipeOpTorch}.
}
\description{
Applies a 1D max pooling over an input signal composed of several input
planes.
}
\section{Module}{

Calls \code{\link[torch:nn_max_pool1d]{torch::nn_max_pool1d()}} during training.
}

\section{State}{

The state is the value calculated by the public method \code{shapes_out()}.
}

\section{Methods}{

Only methods inherited from \code{\link{PipeOpTorch}}/\code{\link{PipeOp}}.
}

\section{Credit}{

Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{mlr3torch}, as well as in the top-level folder of the
package source.
}

\section{Input and Output Channels}{

There is one input channel \code{"input"}.
Depending on the constructor argument \code{return_indices}, there is either one output channel \code{"output"} if
\code{return_indices} is \code{FALSE}, or two channels \code{"output"} and \code{"indices"} if \code{return_indices} is \code{TRUE}.
For an explanation see \code{\link{PipeOpTorch}}.
}

\section{Parameters}{

\itemize{
\item \code{kernel_size} :: \code{integer()}\cr
The size of the window. Can be single number or a vector.
\item \code{stride} :: (\verb{integer(1))}\cr
The stride of the window. Can be a single number or a vector. Default: \code{kernel_size}
\item \code{padding} :: \code{integer()}\cr
Implicit zero paddings on both sides of the input. Can be a single number or a tuple (padW,). Default: 0
\item \code{dilation} :: \code{integer()}\cr
Controls the spacing between the kernel points; also known as the Ã  trous algorithm. Default: 1
\item \code{ceil_mode} :: \code{logical(1)}\cr
When True, will use ceil instead of floor to compute the output shape. Default: \code{FALSE}
}
}

\examples{
# po
obj = po("nn_max_pool1d", kernel_size = 3)
obj$id
obj$module_generator
obj$shapes_out(c(16, 5, 100))

# pot
obj = pot("max_pool1d")
obj$id

}
\seealso{
Other PipeOpTorch: 
\code{\link{pipeop_torch_act_celu}},
\code{\link{pipeop_torch_act_elu}},
\code{\link{pipeop_torch_act_gelu}},
\code{\link{pipeop_torch_act_glu}},
\code{\link{pipeop_torch_act_rrelu}},
\code{\link{pipeop_torch_act_selu}},
\code{\link{pipeop_torch_act_sigmoid}},
\code{\link{pipeop_torch_act_softplus}},
\code{\link{pipeop_torch_act_softshrink}},
\code{\link{pipeop_torch_act_tanhshrink}},
\code{\link{pipeop_torch_act_tanh}},
\code{\link{pipeop_torch_act}},
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_batch_norm1d}},
\code{\link{pipeop_torch_batch_norm}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_dropout}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_layer_norm}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_merge}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_squeeze}}
}
\concept{PipeOpTorch}
\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{mlr3torch::PipeOpTorch} -> \code{\link[mlr3torch:PipeOpTorchMaxPool]{mlr3torch::PipeOpTorchMaxPool}} -> \code{PipeOpTorchMaxPool1D}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PipeOpTorchMaxPool1D-new}{\code{PipeOpTorchMaxPool1D$new()}}
\item \href{#method-PipeOpTorchMaxPool1D-clone}{\code{PipeOpTorchMaxPool1D$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="help"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-help'><code>mlr3pipelines::PipeOp$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-predict'><code>mlr3pipelines::PipeOp$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-print'><code>mlr3pipelines::PipeOp$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-train'><code>mlr3pipelines::PipeOp$train()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3torch" data-topic="PipeOpTorch" data-id="shapes_out"><a href='../../mlr3torch/html/PipeOpTorch.html#method-PipeOpTorch-shapes_out'><code>mlr3torch::PipeOpTorch$shapes_out()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpTorchMaxPool1D-new"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpTorchMaxPool1D-new}{}}}
\subsection{Method \code{new()}}{
Initializes an instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpTorchMaxPool1D$new(
  id = "nn_max_pool1d",
  return_indices = FALSE,
  param_vals = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
The id for of the new object.}

\item{\code{return_indices}}{(\code{logical(1)})\cr
Whether to return the indices. See section 'Input and Output Channels' for more information.}

\item{\code{param_vals}}{(named \code{list()})\cr
The initial parameters for the object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpTorchMaxPool1D-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpTorchMaxPool1D-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpTorchMaxPool1D$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
