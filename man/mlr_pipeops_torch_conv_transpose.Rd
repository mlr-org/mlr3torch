% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchConvTranspose.R
\name{mlr_pipeops_torch_conv_transpose}
\alias{mlr_pipeops_torch_conv_transpose}
\alias{PipeOpTorchConvTranspose}
\title{Base Class Transpose Convolution}
\format{
\code{\link{R6Class}} inheriting from \code{\link{PipeOpTorch}}, \code{\link{PipeOp}}.
}
\description{
Base class for transpose convolution.
Don't use this class directly.
}
\section{Construction}{
 \code{PipeOpTorchConvTranspose$new(id, d, module_generator, param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object.
\item \code{param_vals} :: named \code{list()}\cr List of hyperparameter settings to overwrite the initial values. Default is  \code{list()}.
\item \code{module_generator} :: \code{nn_module_generator}\cr The torch module generator.
\item \code{d} :: \code{integer(1)}\cr
The dimension of the transpose convolution.
}
}

\section{Input and Output Channels}{
 One input channel called \code{"input"} and one output channel called"output". For an explanation see \code{\link{PipeOpTorch}}.
}

\section{State}{
 The state is the value calculated by the public method \code{shapes_out()}.
}

\section{Parameters}{

\itemize{
\item \code{out_channels} :: \code{integer(1)}\cr
Number of output channels produce by the convolution.
\item \code{kernel_size} :: \code{integer()}\cr
Size of the convolving kernel.
\item \code{stride} :: \code{integer()}\cr
Stride of the convolution. Default: 1.
\item \code{padding} :: \verb{ }integer()`\cr
‘dilation * (kernel_size - 1) - padding’ zero-padding will be added to both sides of the input. Default: 0.
\item \code{output_padding} ::\code{integer()}\cr
Additional size added to one side of the output shape. Default: 0.
\item \code{groups} :: \code{integer()}\cr
Number of blocked connections from input channels to output channels. Default: 1
\item \code{bias} :: \code{logical(1)}\cr
If ‘True’, adds a learnable bias to the output. Default: ‘TRUE’.
\item \code{dilation} :: \code{integer()}\cr
Spacing between kernel elements. Default: 1.
\item \code{padding_mode} :: \code{character(1)}\cr
The padding mode. One of \code{"zeros"}, \code{"reflect"}, \code{"replicate"}, or \code{"circular"}. Default is \code{"zeros"}.
}
}

\section{Fields}{
 Only fields inherited from \code{PipeOpTorch}/\code{\link{PipeOp}{mlr3pipelines}}].
}

\section{Methods}{
 Only methods inherited from \code{PipeOpTorch}/\code{\link{PipeOp}{mlr3pipelines}}].
}

\section{Internals}{
 See the respective child class.
}

\section{Credit}{
 Parts of this documentation have been copied or adapted from the R package \CRANpkg{torch}, that comes under the  MIT license, which is included in the COPYRIGHTS file of the source package.
}

\seealso{
Other PipeOpTorch: 
\code{\link{mlr_pipeops_torch_avg_pool1d}},
\code{\link{mlr_pipeops_torch_avg_pool2d}},
\code{\link{mlr_pipeops_torch_avg_pool3d}},
\code{\link{mlr_pipeops_torch_avg_pool}},
\code{\link{mlr_pipeops_torch_batch_norm}},
\code{\link{mlr_pipeops_torch_celu}},
\code{\link{mlr_pipeops_torch_conv1d}},
\code{\link{mlr_pipeops_torch_conv2d}},
\code{\link{mlr_pipeops_torch_conv3d}},
\code{\link{mlr_pipeops_torch_conv_transpose1d}},
\code{\link{mlr_pipeops_torch_conv_transpose2d}},
\code{\link{mlr_pipeops_torch_conv_transpose3d}},
\code{\link{mlr_pipeops_torch_conv}},
\code{\link{mlr_pipeops_torch_dropout}},
\code{\link{mlr_pipeops_torch_elu}},
\code{\link{mlr_pipeops_torch_flatten}},
\code{\link{mlr_pipeops_torch_gelu}},
\code{\link{mlr_pipeops_torch_glu}},
\code{\link{mlr_pipeops_torch_hard_shrink}},
\code{\link{mlr_pipeops_torch_hardsigmoid}},
\code{\link{mlr_pipeops_torch_hard}},
\code{\link{mlr_pipeops_torch_head}},
\code{\link{mlr_pipeops_torch_layer_norm}},
\code{\link{mlr_pipeops_torch_leaky_relu}},
\code{\link{mlr_pipeops_torch_log_sigmoid}},
\code{\link{mlr_pipeops_torch_max_pool1d}},
\code{\link{mlr_pipeops_torch_max_pool2d}},
\code{\link{mlr_pipeops_torch_max_pool3d}},
\code{\link{mlr_pipeops_torch_max_pool}},
\code{\link{mlr_pipeops_torch_merge_cat}},
\code{\link{mlr_pipeops_torch_merge_prod}},
\code{\link{mlr_pipeops_torch_merge_sum}},
\code{\link{mlr_pipeops_torch_merge}},
\code{\link{mlr_pipeops_torch_model_classif}},
\code{\link{mlr_pipeops_torch_model_regr}},
\code{\link{mlr_pipeops_torch_model}},
\code{\link{mlr_pipeops_torch_prelu}},
\code{\link{mlr_pipeops_torch_relu6}},
\code{\link{mlr_pipeops_torch_relu}},
\code{\link{mlr_pipeops_torch_reshape}},
\code{\link{mlr_pipeops_torch_rrelu}},
\code{\link{mlr_pipeops_torch_selu}},
\code{\link{mlr_pipeops_torch_sigmoid}},
\code{\link{mlr_pipeops_torch_softmax}},
\code{\link{mlr_pipeops_torch_softplus}},
\code{\link{mlr_pipeops_torch_softshrink}},
\code{\link{mlr_pipeops_torch_softsign}},
\code{\link{mlr_pipeops_torch_squeeze}},
\code{\link{mlr_pipeops_torch_tanhshrink}},
\code{\link{mlr_pipeops_torch_tanh}},
\code{\link{mlr_pipeops_torch_threshold}},
\code{\link{pipeop_torch_linear}}
}
\concept{PipeOpTorch}
