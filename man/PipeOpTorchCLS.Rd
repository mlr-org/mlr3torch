% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchCLS.R
\name{PipeOpTorchCLS}
\alias{PipeOpTorchCLS}
\title{PipeOpTorchCLS}
\description{
Concatenates a CLS token to the input. TODO: explain exactly where this concatenation occurs.
}
\section{Parameters}{

\itemize{
\item \code{d_token} :: \code{integer(1)}\cr
The dimensionality of the embedding for the FT-Transformer.
\item \code{initialization} :: \code{character(1)}\cr
The initialization method for the token embedding.
Either "uniform" (uniform with range \link{-1/sqrt(d_token), 1/sqrt(d_token)}, calls \code{\link[torch:nn_init_uniform_]{torch::nn_init_uniform_()}})
or "normal" (Gaussian with mean 0 and std 1/sqrt(d_token), calls \code{\link[torch:nn_init_normal_]{torch::nn_init_normal_()}}).
}
}

\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{\link[mlr3torch:PipeOpTorch]{mlr3torch::PipeOpTorch}} -> \code{PipeOpTorchCLS}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PipeOpTorchCLS-new}{\code{PipeOpTorchCLS$new()}}
\item \href{#method-PipeOpTorchCLS-clone}{\code{PipeOpTorchCLS$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="help"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-help'><code>mlr3pipelines::PipeOp$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-predict'><code>mlr3pipelines::PipeOp$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-print'><code>mlr3pipelines::PipeOp$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-train'><code>mlr3pipelines::PipeOp$train()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3torch" data-topic="PipeOpTorch" data-id="shapes_out"><a href='../../mlr3torch/html/PipeOpTorch.html#method-PipeOpTorch-shapes_out'><code>mlr3torch::PipeOpTorch$shapes_out()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpTorchCLS-new"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpTorchCLS-new}{}}}
\subsection{Method \code{new()}}{
Create a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpTorchCLS$new(id = "nn_ft_cls", param_vals = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
Identifier of the resulting object.}

\item{\code{param_vals}}{(\code{list()})\cr
List of hyperparameter settings, overwriting the hyperparameter settings that would
otherwise be set during construction.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpTorchCLS-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpTorchCLS-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpTorchCLS$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
