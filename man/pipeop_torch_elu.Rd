% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ActivationNew.R
\name{pipeop_torch_elu}
\alias{pipeop_torch_elu}
\alias{PipeOpTorchElu}
\alias{PipeOpTorchHardShrink}
\title{Elu Activation Function}
\format{
\link{\code{R6Class}} inheriting from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

\link{\code{R6Class}} inheriting from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.
}
\description{
Applies element-wise,
\deqn{ELU(x) = max(0,x) + min(0, \alpha * (exp(x) - 1))}.
}
\section{Construction}{
 \code{PipeOpTorchPipeOpTorchAct$new(id, param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object. The default is "elu".
\item \code{param_vals}` :: named \code{list()}\cr List of hyperparameter settings. Default is  \code{list()}.
}

 \code{PipeOpTorchElu$new(id, param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object. The default is "elu".
\item \code{param_vals}` :: named \code{list()}\cr List of hyperparameter settings. Default is  \code{list()}.
}
}

\section{Input and Output Channels}{

One input channel called \code{"input"} and one output channel called‘"output"’. For an explanation see \link{\code{PipeOpTorch}}.


One input channel called \code{"input"} and one output channel called‘"output"’. For an explanation see \link{\code{PipeOpTorch}}.
}

\section{State}{

The state is the value calculated by the public method \code{shapes_out()}.


The state is the value calculated by the public method \code{shapes_out()}.
}

\section{Parameters}{

\itemize{
\item \code{alpha} :: \code{numeric(1)}\cr
The alpha value for the ELU formulation. Default: 1.0
\item \code{inplace} :: \code{logical(1)}\cr
Whether to do the operation in-place. Default: \code{FALSE}.
}


\itemize{
\item \code{alpha} :: \code{numeric(1)}\cr
The alpha value for the ELU formulation. Default: 1.0
\item \code{inplace} :: \code{logical(1)}\cr
Whether to do the operation in-place. Default: \code{FALSE}.
}
}

\section{Internals}{

Calls \code{\link[torch:nn_elu]{torch::nn_elu()}} when trained.


Calls \code{\link[torch:nn_elu]{torch::nn_elu()}} when trained.
}

\section{Credit}{

Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{\code{mlr3torch}}, as well as in the top-level folder of
the package source.


Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{\code{mlr3torch}}, as well as in the top-level folder of
the package source.
}

\seealso{
Other PipeOpTorch: 
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_batch_norm1d}},
\code{\link{pipeop_torch_batch_norm}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_dropout}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_layer_norm}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_max_pool1d}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_merge}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_squeeze}}

Other PipeOpTorch: 
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_batch_norm1d}},
\code{\link{pipeop_torch_batch_norm}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_dropout}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_layer_norm}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_max_pool1d}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_merge}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_squeeze}}
}
\concept{PipeOpTorch}
