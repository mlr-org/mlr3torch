% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TorchOptimizer.R
\name{TorchOptimizer}
\alias{TorchOptimizer}
\title{Torch Optimizer}
\format{
\link[R6:R6Class]{R6::R6Class}
}
\arguments{
\item{params}{(\code{list} of \code{\link[torch:nn_parameter]{torch::nn_parameter}})\cr
The parameters that are trained by the optimizer.}
}
\description{
This wraps a \code{torch::torch_optimizer_generator}.
Can be used to configure the \code{optimizer} of a \code{\link{ModelDescriptor}}.

For a list of available optimizersparameters, seen \code{\link{mlr3torch_optimizers}}.

Constructs the optimizer for the given parameter values.
}
\section{Fields}{

\itemize{
\item \code{label} :: \code{character(1)}\cr
The label for the object.
\item \code{task_types} :: \code{character()}\cr
The task types that are supported.
\item \code{loss} :: `
The generator of the optimizer.
\item \code{param_set} :: \code{paradox::ParamSet}\cr
The parameter set.
\item \code{packages} :: \code{character()}\cr
The packages this optimizer requires.
}
}

\section{Methods}{

\itemize{
\item \code{get_optimizer(params)}\cr
(\code{list} of \code{\link[torch:nn_parameter]{torch::nn_parameter}}) -> \code{torch_optimizer()}
Initializes the torch loss for the provided params (network) for the fiven parameter values (\code{ParamSet}).
}
}

\examples{
# Create a new Torch Optimizer
opt = TorchOptimizer$new(torch::optim_adam, label = "adam")
# If the param set is not specified, parameters are inferred but are of class ParamUty
opt$param_set

# Create the optimizer for a network
net = nn_linear(10, 1)
o = opt$get_optimizer(net$parameters)
}
\concept{TorchLoss}
