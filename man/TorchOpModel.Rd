% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TorchOpModel.R
\name{TorchOpModel}
\alias{TorchOpModel}
\title{Builds a mlr3 Torch Learner from its input}
\description{
Use TorchOpModeLClassif or TorchOpModelRegr for the respective task type.
During \verb{$train()} this TorchOp first builds the model (network, optimizer,
loss, ...) and afterwards trains the network.
It's parameterset is identical to LearnerClassifTorch and LearnerRegrTorch respectively.
}
\details{
TorchOpModelClassif and TorchOpModelRegr inherit from this R6 Class.
}
\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{\link[mlr3torch:TorchOp]{mlr3torch::TorchOp}} -> \code{TorchOpModel}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TorchOpModel-new}{\code{TorchOpModel$new()}}
\item \href{#method-TorchOpModel-clone}{\code{TorchOpModel$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-predict'><code>mlr3pipelines::PipeOp$predict()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-train'><code>mlr3pipelines::PipeOp$train()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3torch" data-topic="TorchOp" data-id="build"><a href='../../mlr3torch/html/TorchOp.html#method-TorchOp-build'><code>mlr3torch::TorchOp$build()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3torch" data-topic="TorchOp" data-id="print"><a href='../../mlr3torch/html/TorchOp.html#method-TorchOp-print'><code>mlr3torch::TorchOp$print()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TorchOpModel-new"></a>}}
\if{latex}{\out{\hypertarget{method-TorchOpModel-new}{}}}
\subsection{Method \code{new()}}{
Creates an object of class \link{TorchOpModel}\cr
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TorchOpModel$new(id, param_vals, .task_type, .optimizer, .loss)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
The id of the object.}

\item{\code{param_vals}}{(\verb{named list()})\cr
A list containing the initial parameter values.}

\item{\code{.task_type}}{(\code{character(1)})\cr
The task type, see mlr_reflections$task_types.}

\item{\code{.optimizer}}{(\code{character(1)})\cr
The optimizer, see torch_reflections$optimizer.}

\item{\code{.loss}}{(\code{character(1)})\cr
The loss function, see torch_reflections$loss.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TorchOpModel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TorchOpModel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TorchOpModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
