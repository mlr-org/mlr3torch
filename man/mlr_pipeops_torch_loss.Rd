% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchLoss.R
\name{mlr_pipeops_torch_loss}
\alias{mlr_pipeops_torch_loss}
\alias{PipeOpTorchLoss}
\title{Loss Configuration}
\format{
\code{\link{R6Class}} inheriting from \code{\link{PipeOp}}.
}
\description{
Configures the loss of a deep learning model.
}
\section{Construction}{
 \code{PipeOpTorchLoss$new(loss, id = "torch_loss", param_vals = list())}
\itemize{
\item \code{loss} :: \code{\link{TorchLoss}} or \code{character(1)} or \code{nn_loss}\cr
The loss (or something convertible via \code{\link[=as_torch_loss]{as_torch_loss()}}).
This object is cloned during construction.
\item \code{id} :: \code{character(1)}\cr The id for the object. The default is "torch_loss".
\item \code{param_vals} :: named \code{list()}\cr List of hyperparameter settings to overwrite the initial values. Default is  \code{list()}.
}
}

\section{Input and Output Channels}{

There is one input channel \code{"input"} and one output channel \code{"output"}.
During \emph{training}, the channels are of class \code{\link{ModelDescriptor}}.
During \emph{prediction}, the channels are of class \code{\link{Task}}.
}

\section{State}{

The state is set to an empty \code{list()}.
}

\section{Parameters}{

The parameters are defined dynamically from the loss set during construction.
}

\section{Fields}{

Only fields inherited from \code{\link{PipeOp}}.
}

\section{Methods}{

Only methods inherited from \code{\link{PipeOp}}.
}

\section{Internals}{

During training the loss is cloned and added to the \code{\link{ModelDescriptor}}.
}

\examples{
po_loss = po("torch_loss", "cross_entropy")
po_loss$param_set
mdin = po("torch_ingress_num")$train(list(tsk("iris")))
mdin[[1L]]$loss
mdout = po_loss$train(mdin)[[1L]]
mdout$loss
}
\seealso{
Other model_configuration: 
\code{\link{mlr_pipeops_torch_callbacks}},
\code{\link{mlr_pipeops_torch_optimizer}}
}
\concept{model_configuration}
