% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LearnerRegrTabNet.R
\name{mlr_learners_regr.tabnet}
\alias{mlr_learners_regr.tabnet}
\alias{LearnerRegrTabNet}
\title{Regression TabNet Learner}
\description{
Calls \link[tabnet:tabnet]{tabnet::tabnet} from package \CRANpkg{tabnet}.
}
\section{Dictionary}{
 This \link{Learner} can be instantiated via the
\link[mlr3misc:Dictionary]{dictionary} \link{mlr_learners} or with the associated
sugar function \code{\link[=lrn]{lrn()}}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{mlr_learners$get("regr.tabnet")
lrn("regr.tabnet")
}\if{html}{\out{</div>}}
}

\section{Meta Information}{

, * Task type: \dQuote{regr}, * Predict Types: \dQuote{response}, * Feature Types: \dQuote{logical}, \dQuote{integer}, \dQuote{numeric}, \dQuote{factor}, \dQuote{ordered}, * Required Packages: \CRANpkg{mlr3}, \CRANpkg{tabnet}
}

\section{Parameters}{

, |Id                     |Type      |Default   |Levels                   |Range                                |, |:----------------------|:---------|:---------|:------------------------|:------------------------------------|, |num_threads            |integer   |1         |                         |\eqn{[1, \infty)}{[1, Inf)}          |, |batch_size             |integer   |256       |                         |\eqn{[1, \infty)}{[1, Inf)}          |, |penalty                |numeric   |0.001     |                         |\eqn{(-\infty, \infty)}{(-Inf, Inf)} |, |clip_value             |untyped   |          |                         |-                                    |, |loss                   |character |auto      |auto, mse, cross_entropy |-                                    |, |epochs                 |integer   |5         |                         |\eqn{[1, \infty)}{[1, Inf)}          |, |drop_last              |logical   |FALSE     |TRUE, FALSE              |-                                    |, |decision_width         |integer   |8         |                         |\eqn{[1, \infty)}{[1, Inf)}          |, |attention_width        |integer   |8         |                         |\eqn{[1, \infty)}{[1, Inf)}          |, |num_steps              |integer   |3         |                         |\eqn{[1, \infty)}{[1, Inf)}          |, |feature_reusage        |numeric   |1.3       |                         |\eqn{[0, \infty)}{[0, Inf)}          |, |mask_type              |character |sparsemax |sparsemax, entmax        |-                                    |, |virtual_batch_size     |integer   |128       |                         |\eqn{[1, \infty)}{[1, Inf)}          |, |valid_split            |numeric   |0         |                         |\eqn{[0, 1]}{[0, 1]}                 |, |learn_rate             |numeric   |0.02      |                         |\eqn{[0, 1]}{[0, 1]}                 |, |optimizer              |untyped   |adam      |                         |-                                    |, |lr_scheduler           |untyped   |          |                         |-                                    |, |lr_decay               |numeric   |0.1       |                         |\eqn{[0, 1]}{[0, 1]}                 |, |step_size              |integer   |30        |                         |\eqn{[1, \infty)}{[1, Inf)}          |, |checkpoint_epochs      |integer   |10        |                         |\eqn{[1, \infty)}{[1, Inf)}          |, |cat_emb_dim            |integer   |1         |                         |\eqn{[0, \infty)}{[0, Inf)}          |, |num_independent        |integer   |2         |                         |\eqn{[0, \infty)}{[0, Inf)}          |, |num_shared             |integer   |2         |                         |\eqn{[0, \infty)}{[0, Inf)}          |, |momentum               |numeric   |0.02      |                         |\eqn{[0, 1]}{[0, 1]}                 |, |pretraining_ratio      |numeric   |0.5       |                         |\eqn{[0, 1]}{[0, 1]}                 |, |verbose                |logical   |FALSE     |TRUE, FALSE              |-                                    |, |device                 |character |auto      |auto, cpu, cuda          |-                                    |, |importance_sample_size |integer   |-         |                         |\eqn{[0, 1e+05]}{[0, 1e+05]}         |
}

\examples{
\dontrun{
library(mlr3)
library(mlr3torch)

task <- tsk("boston_housing")

# Creating a learner & training on example task
lrn <- lrn("regr.tabnet")

lrn$param_set$values$epochs <- 10
lrn$train(task)

# Predict on training data, get RMSE
predictions <- lrn$predict(task)
predictions$score(msr("regr.rmse"))
}
}
\references{
ArÄ±k, O S, Pfister, Tomas (2021).
\dQuote{Tabnet: Attentive interpretable tabular learning.}
In \emph{AAAI}, volume 35, 6679--6687.
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[=Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
Lukas Burk
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3:LearnerRegr]{mlr3::LearnerRegr}} -> \code{LearnerRegrTabnet}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerRegrTabnet-new}{\code{LearnerRegrTabNet$new()}}
\item \href{#method-LearnerRegrTabnet-importance}{\code{LearnerRegrTabNet$importance()}}
\item \href{#method-LearnerRegrTabnet-clone}{\code{LearnerRegrTabNet$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerRegrTabnet-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerRegrTabnet-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerRegrTabNet$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerRegrTabnet-importance"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerRegrTabnet-importance}{}}}
\subsection{Method \code{importance()}}{
The importance scores are extracted from the slot \code{.$model$fit$importances}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerRegrTabNet$importance()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named \code{numeric()}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerRegrTabnet-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerRegrTabnet-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerRegrTabNet$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
