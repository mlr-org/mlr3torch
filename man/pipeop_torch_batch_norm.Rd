% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchBatchNorm.R
\name{pipeop_torch_batch_norm}
\alias{pipeop_torch_batch_norm}
\alias{PipeOpTorchBatchNorm}
\alias{PipeOpTorchBatchNorm1D}
\alias{PipeOpTorchBatchNorm2D}
\alias{PipeOpTorchBatchNorm3D}
\title{Base Class for Batch Normalization}
\format{
\link{\code{R6Class}} inheriting from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

\link{\code{R6Class}} inheriting from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

\link{\code{R6Class}} inheriting from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

\link{\code{R6Class}} inheriting from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.
}
\description{
Base class for batch normalization.
Don't use this class directly.

Initializes an instance of this \link[R6:R6Class]{R6} class.

Base class for batch normalization.
Don't use this class directly.

Initializes an instance of this \link[R6:R6Class]{R6} class.

Initializes an instance of this \link[R6:R6Class]{R6} class.

Initializes an instance of this \link[R6:R6Class]{R6} class.
}
\section{Construction}{
 \code{PipeOpTorchBatchNorm$new(id, param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object.
\item \code{param_vals}` :: named \code{list()}\cr List of hyperparameter settings. Default is  \code{list()}.
\item \code{module_generator} :: \code{nn_module_generator}\cr The torch module generator.
\item \code{min_dim} :: \code{integer(1)}\cr
The minimum number of dimension for the input tensor.
\item \code{max_dim} :: \code{integer(1)}\cr
The maximum number of dimension for the input tensor.
}

 \code{PipeOpTorchBatchNorm1D$new(id, param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object. The default is "nn_batch_norm_1d".
\item \code{param_vals}` :: named \code{list()}\cr List of hyperparameter settings. Default is  \code{list()}.
}

 \code{PipeOpTorchBatchNorm2D$new(id, param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object. The default is "nn_batch_norm_2d".
\item \code{param_vals}` :: named \code{list()}\cr List of hyperparameter settings. Default is  \code{list()}.
}

 \code{PipeOpTorchBatchNorm3D$new(id, param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object. The default is "nn_batch_norm_3d".
\item \code{param_vals}` :: named \code{list()}\cr List of hyperparameter settings. Default is  \code{list()}.
}
}

\section{Input and Output Channels}{
 One input channel called \code{"input"} and one output channel called‘"output"’. For an explanation see \link{\code{PipeOpTorch}}.

 One input channel called \code{"input"} and one output channel called‘"output"’. For an explanation see \link{\code{PipeOpTorch}}.

 One input channel called \code{"input"} and one output channel called‘"output"’. For an explanation see \link{\code{PipeOpTorch}}.

 One input channel called \code{"input"} and one output channel called‘"output"’. For an explanation see \link{\code{PipeOpTorch}}.
}

\section{State}{
 The state is the value calculated by the public method \code{shapes_out()}.

 The state is the value calculated by the public method \code{shapes_out()}.

 The state is the value calculated by the public method \code{shapes_out()}.

 The state is the value calculated by the public method \code{shapes_out()}.
}

\section{Parameters}{

\itemize{
\item \code{eps} :: \code{numeric(1)}\cr
A value added to the denominator for numerical stability. Default: \code{1e-5}.
\item \code{momentum} :: \code{numeric(1)}\cr
The value used for the running_mean and running_var computation. Can be set to \code{NULL} for cumulative moving average
(i.e. simple average). Default: 0.1
\item \code{affine} :: \code{logical(1)}\cr
a boolean value that when set to \code{TRUE}, this module has learnable affine parameters. Default: \code{TRUE}
\item \code{track_running_stats} :: \code{logical(1)}\cr
a boolean value that when set to \code{TRUE}, this module tracks the running mean and variance, and when set to \code{FALSE},
this module does not track such statistics and always uses batch statistics in both training and eval modes.
Default: \code{TRUE}
}


\itemize{
\item \code{eps} :: \code{numeric(1)}\cr
A value added to the denominator for numerical stability. Default: \code{1e-5}.
\item \code{momentum} :: \code{numeric(1)}\cr
The value used for the running_mean and running_var computation. Can be set to \code{NULL} for cumulative moving average
(i.e. simple average). Default: 0.1
\item \code{affine} :: \code{logical(1)}\cr
a boolean value that when set to \code{TRUE}, this module has learnable affine parameters. Default: \code{TRUE}
\item \code{track_running_stats} :: \code{logical(1)}\cr
a boolean value that when set to \code{TRUE}, this module tracks the running mean and variance, and when set to \code{FALSE},
this module does not track such statistics and always uses batch statistics in both training and eval modes.
Default: \code{TRUE}
}


\itemize{
\item \code{eps} :: \code{numeric(1)}\cr
A value added to the denominator for numerical stability. Default: \code{1e-5}.
\item \code{momentum} :: \code{numeric(1)}\cr
The value used for the running_mean and running_var computation. Can be set to \code{NULL} for cumulative moving average
(i.e. simple average). Default: 0.1
\item \code{affine} :: \code{logical(1)}\cr
a boolean value that when set to \code{TRUE}, this module has learnable affine parameters. Default: \code{TRUE}
\item \code{track_running_stats} :: \code{logical(1)}\cr
a boolean value that when set to \code{TRUE}, this module tracks the running mean and variance, and when set to \code{FALSE},
this module does not track such statistics and always uses batch statistics in both training and eval modes.
Default: \code{TRUE}
}


\itemize{
\item \code{eps} :: \code{numeric(1)}\cr
A value added to the denominator for numerical stability. Default: \code{1e-5}.
\item \code{momentum} :: \code{numeric(1)}\cr
The value used for the running_mean and running_var computation. Can be set to \code{NULL} for cumulative moving average
(i.e. simple average). Default: 0.1
\item \code{affine} :: \code{logical(1)}\cr
a boolean value that when set to \code{TRUE}, this module has learnable affine parameters. Default: \code{TRUE}
\item \code{track_running_stats} :: \code{logical(1)}\cr
a boolean value that when set to \code{TRUE}, this module tracks the running mean and variance, and when set to \code{FALSE},
this module does not track such statistics and always uses batch statistics in both training and eval modes.
Default: \code{TRUE}
}
}

\section{Internals}{

See the respective child class.


See the respective child class.


See the respective child class.


See the respective child class.
}

\section{Fields}{
 Only fields inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

 Only fields inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

 Only fields inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

 Only fields inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.
}

\section{Methods}{
 Only methods inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

 Only methods inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

 Only methods inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.

 Only methods inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.
}

\section{Credit}{
 Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{\code{mlr3torch}}, as well as in the top-level folder of
the package source.

 Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{\code{mlr3torch}}, as well as in the top-level folder of
the package source.

 Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{\code{mlr3torch}}, as well as in the top-level folder of
the package source.

 Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{\code{mlr3torch}}, as well as in the top-level folder of
the package source.
}

\seealso{
Other PipeOpTorch: 
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_celu}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_dropout}},
\code{\link{pipeop_torch_elu}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_gelu}},
\code{\link{pipeop_torch_glu}},
\code{\link{pipeop_torch_hard_shrink}},
\code{\link{pipeop_torch_hardsigmoid}},
\code{\link{pipeop_torch_hard}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_layer_norm}},
\code{\link{pipeop_torch_leaky_relu}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_log_sigmoid}},
\code{\link{pipeop_torch_max_pool1d}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_merge}},
\code{\link{pipeop_torch_prelu}},
\code{\link{pipeop_torch_relu6}},
\code{\link{pipeop_torch_relu}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_rrelu}},
\code{\link{pipeop_torch_selu}},
\code{\link{pipeop_torch_sigmoid}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_softplus}},
\code{\link{pipeop_torch_softshrink}},
\code{\link{pipeop_torch_softsign}},
\code{\link{pipeop_torch_squeeze}},
\code{\link{pipeop_torch_tanhshrink}},
\code{\link{pipeop_torch_tanh}},
\code{\link{pipeop_torch_threshold}}

Other PipeOpTorch: 
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_celu}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_dropout}},
\code{\link{pipeop_torch_elu}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_gelu}},
\code{\link{pipeop_torch_glu}},
\code{\link{pipeop_torch_hard_shrink}},
\code{\link{pipeop_torch_hardsigmoid}},
\code{\link{pipeop_torch_hard}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_layer_norm}},
\code{\link{pipeop_torch_leaky_relu}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_log_sigmoid}},
\code{\link{pipeop_torch_max_pool1d}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_merge}},
\code{\link{pipeop_torch_prelu}},
\code{\link{pipeop_torch_relu6}},
\code{\link{pipeop_torch_relu}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_rrelu}},
\code{\link{pipeop_torch_selu}},
\code{\link{pipeop_torch_sigmoid}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_softplus}},
\code{\link{pipeop_torch_softshrink}},
\code{\link{pipeop_torch_softsign}},
\code{\link{pipeop_torch_squeeze}},
\code{\link{pipeop_torch_tanhshrink}},
\code{\link{pipeop_torch_tanh}},
\code{\link{pipeop_torch_threshold}}

Other PipeOpTorch: 
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_celu}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_dropout}},
\code{\link{pipeop_torch_elu}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_gelu}},
\code{\link{pipeop_torch_glu}},
\code{\link{pipeop_torch_hard_shrink}},
\code{\link{pipeop_torch_hardsigmoid}},
\code{\link{pipeop_torch_hard}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_layer_norm}},
\code{\link{pipeop_torch_leaky_relu}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_log_sigmoid}},
\code{\link{pipeop_torch_max_pool1d}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_merge}},
\code{\link{pipeop_torch_prelu}},
\code{\link{pipeop_torch_relu6}},
\code{\link{pipeop_torch_relu}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_rrelu}},
\code{\link{pipeop_torch_selu}},
\code{\link{pipeop_torch_sigmoid}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_softplus}},
\code{\link{pipeop_torch_softshrink}},
\code{\link{pipeop_torch_softsign}},
\code{\link{pipeop_torch_squeeze}},
\code{\link{pipeop_torch_tanhshrink}},
\code{\link{pipeop_torch_tanh}},
\code{\link{pipeop_torch_threshold}}

Other PipeOpTorch: 
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_celu}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_dropout}},
\code{\link{pipeop_torch_elu}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_gelu}},
\code{\link{pipeop_torch_glu}},
\code{\link{pipeop_torch_hard_shrink}},
\code{\link{pipeop_torch_hardsigmoid}},
\code{\link{pipeop_torch_hard}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_layer_norm}},
\code{\link{pipeop_torch_leaky_relu}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_log_sigmoid}},
\code{\link{pipeop_torch_max_pool1d}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_merge}},
\code{\link{pipeop_torch_prelu}},
\code{\link{pipeop_torch_relu6}},
\code{\link{pipeop_torch_relu}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_rrelu}},
\code{\link{pipeop_torch_selu}},
\code{\link{pipeop_torch_sigmoid}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_softplus}},
\code{\link{pipeop_torch_softshrink}},
\code{\link{pipeop_torch_softsign}},
\code{\link{pipeop_torch_squeeze}},
\code{\link{pipeop_torch_tanhshrink}},
\code{\link{pipeop_torch_tanh}},
\code{\link{pipeop_torch_threshold}}
}
\concept{PipeOpTorch}
