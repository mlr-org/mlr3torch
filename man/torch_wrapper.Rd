% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TorchWrapper.R
\name{torch_wrapper}
\alias{torch_wrapper}
\alias{TorchWrapper}
\title{Base Class for Torch Wrappers}
\format{
\code{\link{R6Class}}
}
\arguments{
\item{man}{(\code{character(1)})\cr
String in the format \verb{[pkg]::[topic]} pointing to a manual page for this object.
The referenced help package can be opened via method \verb{$help()}.}
}
\description{
Abstract Base Class from which \code{\link{TorchLoss}}, \code{\link{TorchOptimizer}}, and \code{\link{TorchCallback}} inherit.
This class wraps a generator (R6Class Generator or the torch version of such a generator) and annotates it.
}
\section{Construction}{

\code{TorchWrapper$new(generator, id, param_set = NULL, packages = NULL, label = id, man = NULL)}
\itemize{
\item \code{generator} :: \code{function} or \code{R6ClassGenerator}\cr
The wrapped generator that is described.
\item \code{id} :: \code{character(1)}\cr
The identifier of the object. Used to e.g. retrieve it from a dictionary.
\item \code{param_set} :: \code{\link[paradox:ParamSet]{paradox::ParamSet}}\cr
The parameter set that describes the arguments of the generator.
\item \code{packages} :: \code{character()}\cr
The packages the generator depends on.
\item \code{label} :: \code{character(1)}\cr
The label, which is used for printing. Defaults to \code{id}.
\item \code{man} :: (\code{character(1)})\cr
String in the format \verb{[pkg]::[topic]} pointing to a manual page for this object.
}
}

\section{Parameters}{

Defined by the constructor argument \code{param_set}.
}

\section{Fields}{

\itemize{
\item \code{generator} :: \code{function} or \code{R6ClassGenerator}\cr
The wrapped generator that is described.
\item \code{id} :: \code{character(1)}\cr
The identifier of the object. Used to e.g. retrieve it from a dictionary.
\item \code{param_set} :: \code{\link[paradox:ParamSet]{paradox::ParamSet}}\cr
The parameter set that describes the arguments of the generator.
\item \code{packages} :: \code{character()}\cr
The packages the generator depends on.
\item \code{label} :: \code{character(1)}\cr
The label, which is used for printing. Defaults to \code{id}.
\item \code{man} :: (\code{character(1)})\cr
String in the format \verb{[pkg]::[topic]} pointing to a manual page for this object.
The referenced help package can be opened via method \verb{$help()}.
}
}

\section{Methods}{

\itemize{
\item \code{generate()}\cr
() -> any
Calls the generator with the given parameter values.
\item \code{print(...)}\cr
() -> \code{CallbackTorch}
Prints the object.
\item \code{help()}\cr
() -> help file\cr
Displays the help file of the wrapped object.
}
}

\section{Internals}{

When a deep clone is created, the wrapped generator is not cloned.
}

\seealso{
Other torch_wrappers: 
\code{\link{mlr3torch_losses}}
}
\concept{torch_wrappers}
