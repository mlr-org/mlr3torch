% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Architecture.R
\name{Architecture}
\alias{Architecture}
\title{Neral Network (Graph-) Architecture}
\description{
Neral Network (Graph-) Architecture

Neral Network (Graph-) Architecture
}
\section{Super class}{
\code{\link[mlr3pipelines:Graph]{mlr3pipelines::Graph}} -> \code{Architecture}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Architecture-add_torchop}{\code{Architecture$add_torchop()}}
\item \href{#method-Architecture-build}{\code{Architecture$build()}}
\item \href{#method-Architecture-clone}{\code{Architecture$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="add_edge"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-add_edge'><code>mlr3pipelines::Graph$add_edge()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="add_pipeop"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-add_pipeop'><code>mlr3pipelines::Graph$add_pipeop()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="chain"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-chain'><code>mlr3pipelines::Graph$chain()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="help"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-help'><code>mlr3pipelines::Graph$help()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="ids"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-ids'><code>mlr3pipelines::Graph$ids()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="initialize"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-initialize'><code>mlr3pipelines::Graph$initialize()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="plot"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-plot'><code>mlr3pipelines::Graph$plot()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="predict"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-predict'><code>mlr3pipelines::Graph$predict()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="print"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-print'><code>mlr3pipelines::Graph$print()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="set_names"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-set_names'><code>mlr3pipelines::Graph$set_names()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="train"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-train'><code>mlr3pipelines::Graph$train()</code></a></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="update_ids"><a href='../../mlr3pipelines/html/Graph.html#method-Graph-update_ids'><code>mlr3pipelines::Graph$update_ids()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Architecture-add_torchop"></a>}}
\if{latex}{\out{\hypertarget{method-Architecture-add_torchop}{}}}
\subsection{Method \code{add_torchop()}}{
Adds a new \link{TorchOp} to the list of \link{TorchOp}s.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Architecture$add_torchop(op)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{op}}{(\code{TorchOp}) The TorchOp.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Architecture-build"></a>}}
\if{latex}{\out{\hypertarget{method-Architecture-build}{}}}
\subsection{Method \code{build()}}{
Builds an \link[torch:nn_module]{torch::nn_module}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Architecture$build(task, input = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{(\verb{[mlr3::Task]}) The task for which to build the network.}

\item{\code{input}}{(\code{any}) The input for the network. Uses the first instance if left as NULL.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns the layers, the output and the edges.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Architecture-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Architecture-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Architecture$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
