% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Architecture.R
\name{Architecture}
\alias{Architecture}
\title{Neral Network (Graph-) Architecture}
\description{
Neral Network (Graph-) Architecture

Neral Network (Graph-) Architecture
}
\section{Super class}{
\code{\link[mlr3pipelines:Graph]{mlr3pipelines::Graph}} -> \code{Architecture}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-add_torchop}{\code{Architecture$add_torchop()}}
\item \href{#method-build}{\code{Architecture$build()}}
\item \href{#method-clone}{\code{Architecture$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="add_edge">}\href{../../mlr3pipelines/html/Graph.html#method-add_edge}{\code{mlr3pipelines::Graph$add_edge()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="add_pipeop">}\href{../../mlr3pipelines/html/Graph.html#method-add_pipeop}{\code{mlr3pipelines::Graph$add_pipeop()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="chain">}\href{../../mlr3pipelines/html/Graph.html#method-chain}{\code{mlr3pipelines::Graph$chain()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="ids">}\href{../../mlr3pipelines/html/Graph.html#method-ids}{\code{mlr3pipelines::Graph$ids()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="initialize">}\href{../../mlr3pipelines/html/Graph.html#method-initialize}{\code{mlr3pipelines::Graph$initialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="plot">}\href{../../mlr3pipelines/html/Graph.html#method-plot}{\code{mlr3pipelines::Graph$plot()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="predict">}\href{../../mlr3pipelines/html/Graph.html#method-predict}{\code{mlr3pipelines::Graph$predict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="print">}\href{../../mlr3pipelines/html/Graph.html#method-print}{\code{mlr3pipelines::Graph$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="set_names">}\href{../../mlr3pipelines/html/Graph.html#method-set_names}{\code{mlr3pipelines::Graph$set_names()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="train">}\href{../../mlr3pipelines/html/Graph.html#method-train}{\code{mlr3pipelines::Graph$train()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="Graph" data-id="update_ids">}\href{../../mlr3pipelines/html/Graph.html#method-update_ids}{\code{mlr3pipelines::Graph$update_ids()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_torchop"></a>}}
\if{latex}{\out{\hypertarget{method-add_torchop}{}}}
\subsection{Method \code{add_torchop()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Architecture$add_torchop(op)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-build"></a>}}
\if{latex}{\out{\hypertarget{method-build}{}}}
\subsection{Method \code{build()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Architecture$build(task, input = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Architecture$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
