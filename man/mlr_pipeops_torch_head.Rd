% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchHead.R
\name{mlr_pipeops_torch_head}
\alias{mlr_pipeops_torch_head}
\alias{PipeOpTorchHead}
\title{Output Head}
\format{
\code{\link{R6Class}} inheriting from \code{\link{PipeOpTorch}}, \code{\link{PipeOp}}.
}
\description{
Output head for classification and regresssion.

\strong{NOTE}
Because the method \verb{$shapes_out()} does not have access to the task, it returns \code{c(NA, NA)}.
When this \code{\link{PipeOp}} is trained however, the model descriptor has the correct output shape.
}
\section{Construction}{

\code{PipeOpTorchHead$new(id = "nn_head", param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object. The default is "nn_head".
\item \code{param_vals} :: named \code{list()}\cr List of hyperparameter settings to overwrite the initial values. Default is  \code{list()}.
}
}

\section{Input and Output Channels}{
 One input channel called \code{"input"} and one output channel called"output". For an explanation see \code{\link{PipeOpTorch}}.
}

\section{State}{
 The state is the value calculated by the public method \code{shapes_out()}.
}

\section{Parameters}{

\itemize{
\item \code{bias} :: \code{logical(1)}\cr
Whether to use a bias. Default is \code{TRUE}.
}
}

\section{Fields}{
 Only fields inherited from \code{PipeOpTorch}/\code{\link{PipeOp}{mlr3pipelines}}].
}

\section{Methods}{
 Only methods inherited from \code{PipeOpTorch}/\code{\link{PipeOp}{mlr3pipelines}}].
}

\section{Internals}{

Calls \code{\link[torch:nn_linear]{torch::nn_linear()}} with the input and output features inferred from the input shape / task.
}

\section{Credit}{
 Parts of this documentation have been copied or adapted from the R package \CRANpkg{torch}, that comes under the  MIT license, which is included in the COPYRIGHTS file of the source package.
}

\examples{
obj = po("nn_head")
obj$id
obj$module_generator
obj$shapes_out(c(16, 10), tsk("iris"))
obj$shapes_out(c(16, 10), tsk("mtcars"))
}
\seealso{
Other PipeOpTorch: 
\code{\link{mlr_pipeops_torch_avg_pool1d}},
\code{\link{mlr_pipeops_torch_avg_pool2d}},
\code{\link{mlr_pipeops_torch_avg_pool3d}},
\code{\link{mlr_pipeops_torch_avg_pool}},
\code{\link{mlr_pipeops_torch_batch_norm}},
\code{\link{mlr_pipeops_torch_celu}},
\code{\link{mlr_pipeops_torch_conv1d}},
\code{\link{mlr_pipeops_torch_conv2d}},
\code{\link{mlr_pipeops_torch_conv3d}},
\code{\link{mlr_pipeops_torch_conv_transpose1d}},
\code{\link{mlr_pipeops_torch_conv_transpose2d}},
\code{\link{mlr_pipeops_torch_conv_transpose3d}},
\code{\link{mlr_pipeops_torch_conv_transpose}},
\code{\link{mlr_pipeops_torch_conv}},
\code{\link{mlr_pipeops_torch_dropout}},
\code{\link{mlr_pipeops_torch_elu}},
\code{\link{mlr_pipeops_torch_flatten}},
\code{\link{mlr_pipeops_torch_gelu}},
\code{\link{mlr_pipeops_torch_glu}},
\code{\link{mlr_pipeops_torch_hard_shrink}},
\code{\link{mlr_pipeops_torch_hardsigmoid}},
\code{\link{mlr_pipeops_torch_hard}},
\code{\link{mlr_pipeops_torch_layer_norm}},
\code{\link{mlr_pipeops_torch_leaky_relu}},
\code{\link{mlr_pipeops_torch_log_sigmoid}},
\code{\link{mlr_pipeops_torch_max_pool1d}},
\code{\link{mlr_pipeops_torch_max_pool2d}},
\code{\link{mlr_pipeops_torch_max_pool3d}},
\code{\link{mlr_pipeops_torch_max_pool}},
\code{\link{mlr_pipeops_torch_merge_cat}},
\code{\link{mlr_pipeops_torch_merge_prod}},
\code{\link{mlr_pipeops_torch_merge_sum}},
\code{\link{mlr_pipeops_torch_merge}},
\code{\link{mlr_pipeops_torch_model_classif}},
\code{\link{mlr_pipeops_torch_model_regr}},
\code{\link{mlr_pipeops_torch_model}},
\code{\link{mlr_pipeops_torch_prelu}},
\code{\link{mlr_pipeops_torch_relu6}},
\code{\link{mlr_pipeops_torch_relu}},
\code{\link{mlr_pipeops_torch_reshape}},
\code{\link{mlr_pipeops_torch_rrelu}},
\code{\link{mlr_pipeops_torch_selu}},
\code{\link{mlr_pipeops_torch_sigmoid}},
\code{\link{mlr_pipeops_torch_softmax}},
\code{\link{mlr_pipeops_torch_softplus}},
\code{\link{mlr_pipeops_torch_softshrink}},
\code{\link{mlr_pipeops_torch_softsign}},
\code{\link{mlr_pipeops_torch_squeeze}},
\code{\link{mlr_pipeops_torch_tanhshrink}},
\code{\link{mlr_pipeops_torch_tanh}},
\code{\link{mlr_pipeops_torch_threshold}},
\code{\link{pipeop_torch_linear}}
}
\concept{PipeOpTorch}
