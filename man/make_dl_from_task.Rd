% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-tasks.R
\name{make_dl_from_task}
\alias{make_dl_from_task}
\title{Convert a task to torch dataloader(s)}
\usage{
make_dl_from_task(
  task,
  valid_split = 0,
  batch_size = 32L,
  transform_train,
  transform_val = NULL,
  drop_last = TRUE
)
}
\arguments{
\item{task}{An object inheriting from \link[mlr3:Task]{Task}. Construction can be
aided by \code{\link[=df_from_imagenet_dir]{df_from_imagenet_dir()}}.}

\item{valid_split}{\verb{[0.2]} Proportion of rows in task to use as validation set.
If \code{0}, no validation dataloader will be created.}

\item{batch_size, drop_last}{Passed to \code{\link[torch:dataloader]{torch::dataloader()}}.}

\item{transform_train}{A function used to transform images, optionally
including data augmentation.
Must begin with \code{\link[torchvision:transform_to_tensor]{torchvision::transform_to_tensor()}} and manually move
to GPU if available.}

\item{transform_val}{Same as \code{transform_train} but applied to the validation
data, typically only including necessary transformations.}
}
\value{
A list containing elements \code{train} and (if \code{valid_split > 0}) \code{val},
each containing the respective \code{\link[torch:dataloader]{dataloader}} objects.
}
\description{
Convert a task to torch dataloader(s)
}
\examples{
\dontrun{
dls <- make_dl_from_task(
  img_task, valid_split = 0.2, batch_size = 32,
  transform_train = img_transforms,
  transform_val = img_transforms, drop_last = TRUE
)
# Verify counts in dataloaders
dls$train$.length()
dls$val$.length()

# Should correspond to valid_split
dls$val$.length() / (dls$train$.length() + dls$val$.length())

# No validation dataloader
dls <- make_dl_from_task(
  img_task,
  valid_split = 0,
  batch_size = 32,
  transform_train = img_transforms,
  drop_last = TRUE
)

# Verify counts in dataloaders
dls$train$.length()

}
}
