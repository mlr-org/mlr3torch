% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchMerge.R
\name{pipeop_torch_merge}
\alias{pipeop_torch_merge}
\alias{PipeOpTorchMerge}
\title{Merge Operation}
\format{
\link{\code{R6Class}} inheriting from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.
}
\description{
Base class for merge operations.

Initializes an instance of this \link[R6:R6Class]{R6} class.
}
\section{Construction}{


\if{html}{\out{<div class="sourceCode">}}\preformatted{PipeOpTorchMergeProd$new(id, module_generator, param_set = ps(), innum = 0, param_vals = list())
}\if{html}{\out{</div>}}

 \code{PipeOpTorchMerge$new(id, param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object. The default is "module".
\item \code{param_vals}` :: named \code{list()}\cr List of hyperparameter settings. Default is  \code{list()}.
\item \code{param_set} :: \code{paradox::ParamSet}\cr The parameter set.
\item \code{module_generator} :: \code{nn_module_generator}\cr The torch module generator.
\item \code{innum} :: \code{integer(1)}\cr
The number of inputs. Default is 0 which means there is one \emph{vararg} input channel.
}
}

\section{Input and Output Channels}{

\code{PipeOpTorchMerge}s has either a \emph{vararg} input channel if the constructor argument \code{innum} is not set, or
input channels \code{"input1"}, ..., \code{"input<innum>"}. There is one output channel \code{"output"}.
For an explanation see \code{\link{PipeOpTorch}}.
}

\section{State}{
 The state is the value calculated by the public method \code{shapes_out()}.
}

\section{Parameters}{
 See the respective child class.
}

\section{Internals}{

See the respective child class.
}

\section{Fields}{
 Only fields inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.
}

\section{Methods}{
 Only methods inherited from \link{\code{PipeOpTorch}}/\link{\code{PipeOp}}.
}

\section{Credit}{
 Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{\code{mlr3torch}}, as well as in the top-level folder of
the package source.
}

\seealso{
Other PipeOpTorch: 
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_batch_norm}},
\code{\link{pipeop_torch_celu}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_dropout}},
\code{\link{pipeop_torch_elu}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_gelu}},
\code{\link{pipeop_torch_glu}},
\code{\link{pipeop_torch_hard_shrink}},
\code{\link{pipeop_torch_hardsigmoid}},
\code{\link{pipeop_torch_hard}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_layer_norm}},
\code{\link{pipeop_torch_leaky_relu}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_log_sigmoid}},
\code{\link{pipeop_torch_max_pool1d}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_prelu}},
\code{\link{pipeop_torch_relu6}},
\code{\link{pipeop_torch_relu}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_rrelu}},
\code{\link{pipeop_torch_selu}},
\code{\link{pipeop_torch_sigmoid}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_softplus}},
\code{\link{pipeop_torch_softshrink}},
\code{\link{pipeop_torch_softsign}},
\code{\link{pipeop_torch_squeeze}},
\code{\link{pipeop_torch_tanhshrink}},
\code{\link{pipeop_torch_tanh}},
\code{\link{pipeop_torch_threshold}}
}
\concept{PipeOpTorch}
