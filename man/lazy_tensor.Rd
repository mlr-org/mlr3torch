% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazy_tensor.R
\name{lazy_tensor}
\alias{lazy_tensor}
\title{Create a lazy tensor}
\usage{
lazy_tensor(x = list(), shape = NULL)
}
\arguments{
\item{x}{(\code{list()} of \code{list()}s)\cr
A list of lists, eaching having two elements \code{id} and \code{data_descriptor}.
Usually the \code{id}s are simply the integers \verb{1, ..., n} where \code{n} is the length of the dataset described by
\code{data_descriptor}.}

\item{shape}{(\code{integer()})\cr
The shape of the lazy tensor. First element must be \code{NA} (the batch dimension).}
}
\description{
Create a vector of class \code{"lazy_tensor"}, which is built upon the \code{\link{DataDescriptor}} class.
Each element of a lazy tensor contains an \code{id} and a \code{\link{DataDescriptor}} and represents
the output of the data descriptor's preprocessing graph applied to the element \code{id} of the data descriptor's
dataset.
Different elements can not only different \code{id}s but also different data descriptor.
The only assumption is (currently) that they all have the same shape.

In most cases using \code{\link[=as_lazy_tensor]{as_lazy_tensor()}} is more convenient.
}
\examples{
# Create a dataset
dsg = dataset(
  initialize = function() self$x = torch_randn(10, 3, 3),
  .getitem = function(i) self$x[i, ],
  .length = function() nrow(self$x)
)
ds = dsg()

dd = DataDescriptor(ds, list(x = c(NA, 3, 3)))

x = map(seq_along(ds), function(i) list(id = i, data_descriptor = dd))

lt = lazy_tensor(x, shape = c(NA, 3, 3))

# the shape
lt$shape

# More convenient ways for construction.
as_lazy_tensor(dd)
as_lazy_tensor(ds, list(x = c(NA, 3, 3)))
as_lazy_tensor(ds$x)
}
\seealso{
lazy_tensor as_lazy_tensor, is_lazy_tensor
}
