% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchMerge.R
\name{mlr_pipeops_torch_merge_cat}
\alias{mlr_pipeops_torch_merge_cat}
\alias{PipeOpTorchMergeCat}
\title{Merge by Concatenation}
\format{
\code{\link{R6Class}} object inheriting from \code{\link{PipeOp}}/\code{\link{PipeOpTorch}}/\code{\link{PipeOpTorchMerge}}.
}
\description{
Concatenates multiple tensors on a given dimension.
No broadcasting rules are applied here, you must reshape the tensors before to have the same shape.
}
\section{Construction}{

\code{PipeOpTorchMergeCat$new(id = "nn_merge_cat", innum = 0, param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object. The default is "nn_merge_cat".
\item \code{param_vals} :: named \code{list()}\cr List of hyperparameter settings to overwrite the initial values. Default is  \code{list()}.
\item \code{innum} :: \code{integer(1)}\cr
The number of inputs. Default is 0 which means there is one \emph{vararg} input channel.
}
}

\section{State}{
 The state is the value calculated by the public method \code{shapes_out()}.
}

\section{Parameters}{

\itemize{
\item \code{dim} :: \code{integer(1)}\cr
The dimension along which to concatenate the tensors.
}
}

\section{Fields}{
 Only fields inherited from \code{PipeOpTorch}/\code{\link{PipeOp}{mlr3pipelines}}].
}

\section{Methods}{
 Only methods inherited from \code{PipeOpTorch}/\code{\link{PipeOp}{mlr3pipelines}}].
}

\section{Internals}{

Calls \code{\link[=nn_merge_cat]{nn_merge_cat()}} when trained.
}

\section{Input and Output Channels}{

\code{PipeOpTorchMerge}s has either a \emph{vararg} input channel if the constructor argument \code{innum} is not set, or
input channels \code{"input1"}, ..., \code{"input<innum>"}. There is one output channel \code{"output"}.
For an explanation see \code{\link{PipeOpTorch}}.
}

\examples{
obj = po("nn_merge_cat", dim = 2)
obj$id
obj$module_generator
obj$shapes_out(list(input1 = c(16, 5, 7), input2 = c(16, 6, 7)))
}
\seealso{
Other PipeOpTorch: 
\code{\link{mlr_pipeops_torch_avg_pool1d}},
\code{\link{mlr_pipeops_torch_avg_pool2d}},
\code{\link{mlr_pipeops_torch_avg_pool3d}},
\code{\link{mlr_pipeops_torch_avg_pool}},
\code{\link{mlr_pipeops_torch_batch_norm}},
\code{\link{mlr_pipeops_torch_celu}},
\code{\link{mlr_pipeops_torch_conv1d}},
\code{\link{mlr_pipeops_torch_conv2d}},
\code{\link{mlr_pipeops_torch_conv3d}},
\code{\link{mlr_pipeops_torch_conv_transpose1d}},
\code{\link{mlr_pipeops_torch_conv_transpose2d}},
\code{\link{mlr_pipeops_torch_conv_transpose3d}},
\code{\link{mlr_pipeops_torch_conv_transpose}},
\code{\link{mlr_pipeops_torch_conv}},
\code{\link{mlr_pipeops_torch_dropout}},
\code{\link{mlr_pipeops_torch_elu}},
\code{\link{mlr_pipeops_torch_flatten}},
\code{\link{mlr_pipeops_torch_gelu}},
\code{\link{mlr_pipeops_torch_glu}},
\code{\link{mlr_pipeops_torch_hard_shrink}},
\code{\link{mlr_pipeops_torch_hardsigmoid}},
\code{\link{mlr_pipeops_torch_hard}},
\code{\link{mlr_pipeops_torch_head}},
\code{\link{mlr_pipeops_torch_layer_norm}},
\code{\link{mlr_pipeops_torch_leaky_relu}},
\code{\link{mlr_pipeops_torch_log_sigmoid}},
\code{\link{mlr_pipeops_torch_max_pool1d}},
\code{\link{mlr_pipeops_torch_max_pool2d}},
\code{\link{mlr_pipeops_torch_max_pool3d}},
\code{\link{mlr_pipeops_torch_max_pool}},
\code{\link{mlr_pipeops_torch_merge_prod}},
\code{\link{mlr_pipeops_torch_merge_sum}},
\code{\link{mlr_pipeops_torch_merge}},
\code{\link{mlr_pipeops_torch_model_classif}},
\code{\link{mlr_pipeops_torch_model_regr}},
\code{\link{mlr_pipeops_torch_model}},
\code{\link{mlr_pipeops_torch_prelu}},
\code{\link{mlr_pipeops_torch_relu6}},
\code{\link{mlr_pipeops_torch_relu}},
\code{\link{mlr_pipeops_torch_reshape}},
\code{\link{mlr_pipeops_torch_rrelu}},
\code{\link{mlr_pipeops_torch_selu}},
\code{\link{mlr_pipeops_torch_sigmoid}},
\code{\link{mlr_pipeops_torch_softmax}},
\code{\link{mlr_pipeops_torch_softplus}},
\code{\link{mlr_pipeops_torch_softshrink}},
\code{\link{mlr_pipeops_torch_softsign}},
\code{\link{mlr_pipeops_torch_squeeze}},
\code{\link{mlr_pipeops_torch_tanhshrink}},
\code{\link{mlr_pipeops_torch_tanh}},
\code{\link{mlr_pipeops_torch_threshold}},
\code{\link{pipeop_torch_linear}}
}
\concept{PipeOpTorch}
