% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/image-task.R
\name{img_dataset}
\alias{img_dataset}
\title{Create a torch dataset from a data.table of images}
\usage{
img_dataset(
  df,
  row_ids = NULL,
  transform = torchvision::transform_to_tensor,
  target_transform = NULL
)
}
\arguments{
\item{df}{Table of image URIs and targets to create dataset from, as
returned by e.g. \code{df_from_imagenet_dir()}. Assumed to have columns
\code{'target'} and \code{'uri'}.}

\item{row_ids}{Integer vector specifying which rows of \code{df} to use.}

\item{transform}{Function of transformation to apply to input images.
By default applies \code{torchvision::transform_to_tensor()} only, yet
model-specific transformations (e.g. resizing) or data augmentation
may be necessary.}

\item{target_transform}{Function of optional transformations applied to the
\code{'target'}, which will be coerced via \code{as.integer()} and
\code{torch::torch_tensor()} before any \code{target_transform()} is applied.}
}
\description{
Create a torch dataset from a data.table of images
}
\examples{
\dontrun{
# Dataset of all imagenette160 images
image_dt <- df_from_imagenet_dir("/opt/example-data/imagenette2-160/")
img_ds   <- img_dataset(image_dt)

# Datasets for train- and validation images
# Inferring set from file path (URI)
train_ids <- grepl("/train/", image_dt$uri)
val_ids   <- grepl("/val/", image_dt$uri)

img_train_ds <- img_dataset(image_dt, row_ids = train_ids)
img_val_ds   <- img_dataset(image_dt, row_ids = val_ids)

# Adding transformations, including device placement
device <- if(torch::cuda_is_available()) "cuda" else "cpu"

to_device <- function(x, device) {
  x$to(device = device)
}

img_transform <- function(x) {
  x \%>\%
    torchvision::transform_to_tensor() \%>\%
    to_device(device) \%>\%
    torchvision::transform_resize(c(64, 64))
}

img_train_ds <- img_dataset(image_dt, row_ids = train_ids, img_transform)
img_val_ds   <- img_dataset(image_dt, row_ids = val_ids, img_transform)
}
}
