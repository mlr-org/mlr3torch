% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TorchLoss.R
\name{torch_loss}
\alias{torch_loss}
\alias{TorchLoss}
\title{Torch Loss}
\format{
\code{\link{R6Class}}
}
\description{
This wraps a \code{torch::nn_loss} and is usually used to configure
It is commonly used to configure the \code{loss} of a torch learner.

For a list of available parameters, seen \code{\link{mlr3torch_losses}}.
}
\section{Construction}{

\code{TorchLoss$new(torch_loss, task_types = NULL, param_set = NULL, label = deparse(substitute(torch_loss))[[1]], packages = NULL)}
\itemize{
\item \code{torch_loss} :: \code{nn_loss}\cr
The loss module.
\item \code{param_set} :: (\code{ParamSet})\cr
The parameter set of the oss If this is \code{NULL} (default), the parameter set is inferred, leading to potentially
less precise parameter descriptions.
\item \code{task_types} :: \code{character()}\cr
The task types supported by this loss.
lf left \code{NULL} (default), this value is set to all available task types.
\item \code{label} :: \code{character(1)}\cr
The label for the \code{TorchLoss}.
\item \code{packages} :: \code{character()}\cr
The packages this loss depends on. The values \code{"torch"} and \code{"mlr3torch"} are always included.
Default is \code{NULL}.
}
}

\section{Parameters}{

Defined by the constructor argument \code{param_set}.
}

\section{Fields}{

\itemize{
\item \code{label} :: \code{character(1)}\cr
The label for the object.
\item \code{task_types} :: \code{character()}\cr
The task types that are supported.
\item \code{loss} :: `
The generator of the loss function.
\item \code{param_set} :: \code{paradox::ParamSet}\cr
The parameter set.
\item \code{packages} :: \code{character()}\cr
The packages this loss requires.
}
}

\section{Methods}{

\itemize{
\item \code{get_loss()}\cr
() -> \code{nn_loss()}\cr
Initializes the torch loss for the given parameter values.
\item \code{help()}\cr
Opens the help page for the wrapped loss.
}
}

\examples{
# Create a new Torch Loss
torchloss = TorchLoss$new(torch_loss = nn_mse_loss, task_types = "regr")
# If the param set is not specified, parameters are inferred but are of class ParamUty

# Open help page
# torchloss$help()

loss$param_set
# Construct the actual loss function
los = tchloss$get_loss()
}
\seealso{
Other torch_wrapper: 
\code{\link{torch_callback}()},
\code{\link{torch_optimizer}}
}
\concept{torch_wrapper}
