% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchIngress.R
\name{mlr_pipeops_torch_ingress_numeric}
\alias{mlr_pipeops_torch_ingress_numeric}
\alias{PipeOpTorchIngressNumeric}
\title{Torch Entry Point for Numeric Features}
\format{
\code{\link{R6Class}} object inheriting from \code{\link{PipeOpTorchIngress}} / \code{\link{PipeOp}}.
}
\description{
Ingress PipeOp that represents a numeric (\code{integer()} and \code{numeric()}) entry point to a torch network.
}
\section{Construction}{

\code{PipeOpTorchIngressNumeric$new(id = "torch_ingress_num", param_vals = list())}
\itemize{
\item \code{id} :: \code{character(1)}\cr The id for the object.
\item \code{param_vals} :: named \code{list()}\cr List of hyperparameter settings to overwrite the initial values. Default is  \code{list()}.
}
}

\section{Input and Output Channels}{

One input channel called \code{"input"} and one output channel called"output". For an explanation see \code{\link{PipeOpTorch}}.
}

\section{Parameters}{

\itemize{
\item \code{select} :: \code{logical(1)}\cr
Whether \code{PipeOp} should selected the supported feature types. Otherwise it will err, when receiving tasks
with unsupported feature types.
}
}

\section{Fields}{

Only fields inherited from \code{\link{PipeOpTorchIngress}} / \code{\link{PipeOp}}.
}

\section{Methods}{

Only methods inherited from \code{\link{PipeOpTorchIngress}} / \code{\link{PipeOp}}.
}

\section{Internals}{

Uses \code{\link[=batchgetter_num]{batchgetter_num()}}.
}

\section{State}{

The state is set to the input shape.
}

\examples{
# We set select to TRUE because the data contains factors as well
po_ingress = po("torch_ingress_num", select = TRUE)
task = tsk("mtcars")
# The output is a TorchIngressToken
token = po_ingress$train(list(task))[[1L]]
ingress = token$ingress[[1L]]
ingress$batchgetter(task$data(1:5, ingress$features), "cpu")
}
\seealso{
Other PipeOps: 
\code{\link{mlr_pipeops_torch_ingress_categ}}
}
\concept{PipeOps}
