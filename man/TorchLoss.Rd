% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TorchLoss.R
\name{TorchLoss}
\alias{TorchLoss}
\title{Torch Loss}
\arguments{
\item{torch_loss}{(\code{nn_loss})\cr
A generator for a loss.}

\item{param_set}{(\code{paradox::ParamSet})\cr
The parameter set.}

\item{label}{(\code{character(1)})\cr
Label for the new instance.}

\item{packages}{(\code{character()})\cr
The R packages this object depends on.}
}
\description{
This wraps a \code{torch::nn_loss}.
Can be used to configure the \code{loss} of a \code{\link{ModelDescriptor}}..

For a list of available parameters, seen \code{\link{mlr3torch_losses}}.

Initializes an instance of this \link[R6:R6Class]{R6} class.
}
\section{Fields}{

\describe{
\item{\code{label}}{(\code{character(1)})\cr
Label for this object.
Can be used in tables, plot and text output instead of the ID.}

\item{\code{task_types}}{(\code{character()})\cr
The task types this object supports.}

\item{\code{loss}}{(\code{nn_loss})\cr\
The generator of the loss function.}

\item{\code{packages}}{(\code{character()})\cr
The packages this optimizer uses.}
}}

\examples{
# Create a new Torch Loss
loss = TorchLoss$new(torch_loss = torch::nn_mse_loss, task_types = "regr")
# If the param set is not specified, parameters are inferred but are of class ParamUty
loss$param_set
# Construct the actual loss function
l = loss$get_loss

}
