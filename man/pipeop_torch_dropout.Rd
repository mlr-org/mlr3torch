% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchDropout.R
\name{pipeop_torch_dropout}
\alias{pipeop_torch_dropout}
\alias{PipeOpTorchDropout}
\title{Dropout}
\format{
\link[R6:R6Class]{R6::R6Class} inheriting from \link{PipeOpTorch}.
}
\description{
During training, randomly zeroes some of the elements of the input
tensor with probability \code{p} using samples from a Bernoulli
distribution.
}
\section{Module}{

Calls \code{\link[torch:nn_dropout]{torch::nn_dropout()}} when trained.
}

\section{Input and Output Channels}{

One input channel called \code{"input"} and one output channel called \code{"output"}.
For an explanation see \code{\link{PipeOpTorch}}.
}

\section{State}{

The state is the value calculated by the public method \code{shapes_out()}.
}

\section{Parameters}{

\itemize{
\item \code{p} :: \code{numeric(1)}\cr
Probability of an element to be zeroed. Default: 0.5 inplace
\item \code{inplace} :: \code{logical(1)}\cr
If set to \code{TRUE}, will do this operation in-place. Default: \code{FALSE.}
}
}

\section{Credit}{

Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{mlr3torch}, as well as in the top-level folder of the
package source.
}

\examples{
# po
obj = po("nn_dropout")
obj$id
obj$module_generator
obj$shapes_out(c(16, 5, 7))

# pot
obj = pot("dropout")
obj$id

}
\seealso{
Other PipeOpTorch: 
\code{\link{pipeop_torch_act_celu}},
\code{\link{pipeop_torch_act_elu}},
\code{\link{pipeop_torch_act_gelu}},
\code{\link{pipeop_torch_act_glu}},
\code{\link{pipeop_torch_act_rrelu}},
\code{\link{pipeop_torch_act_selu}},
\code{\link{pipeop_torch_act_sigmoid}},
\code{\link{pipeop_torch_act_softplus}},
\code{\link{pipeop_torch_act_softshrink}},
\code{\link{pipeop_torch_act_tanhshrink}},
\code{\link{pipeop_torch_act_tanh}},
\code{\link{pipeop_torch_act}},
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_batch_norm1d}},
\code{\link{pipeop_torch_batch_norm}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_layer_norm}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_max_pool1d}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_merge}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_squeeze}}
}
\concept{PipeOpTorch}
\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{mlr3torch::PipeOpTorch} -> \code{PipeOpTorchDropout}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PipeOpTorchDropout-new}{\code{PipeOpTorchDropout$new()}}
\item \href{#method-PipeOpTorchDropout-clone}{\code{PipeOpTorchDropout$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="help"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-help'><code>mlr3pipelines::PipeOp$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-predict'><code>mlr3pipelines::PipeOp$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-print'><code>mlr3pipelines::PipeOp$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-train'><code>mlr3pipelines::PipeOp$train()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3torch" data-topic="PipeOpTorch" data-id="shapes_out"><a href='../../mlr3torch/html/PipeOpTorch.html#method-PipeOpTorch-shapes_out'><code>mlr3torch::PipeOpTorch$shapes_out()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpTorchDropout-new"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpTorchDropout-new}{}}}
\subsection{Method \code{new()}}{
Initializes an instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpTorchDropout$new(id = "nn_dropout", param_vals = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
The id for of the new object.}

\item{\code{param_vals}}{(named \code{list()})\cr
The initial parameters for the object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpTorchDropout-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpTorchDropout-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpTorchDropout$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
