% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CallbackTorch.R
\name{mlr_callbacks_torch}
\alias{mlr_callbacks_torch}
\alias{CallbackTorch}
\title{Base Class for Torch Callbacks}
\format{
\code{\link{R6Class}}
}
\description{
Base class from which Torch Callbacks should inherit.
To create custom callbacks to use in a torch learner use the convenience function \code{\link{torch_callback}}.

Torch Callbacks can be used to gain more control over the training process of a neural network without
having to write everything from scratch.
At each stage (see section "Stages") of the training loop, the corresponding \verb{on_<stage>(ctx)} method is run
that takes as argument a \code{\link{ContextTorch}} which gives access to the relevant objects.
}
\section{Construction}{

\code{CallbackTorch$new()}
}

\section{Methods}{

See section \emph{Stages}.
Other methods can be added freely as well.
}

\section{Inheriting}{

It is recommended to use the sugar function \code{\link[=callback_torch]{callback_torch()}} to create custom callbacks.
}

\section{Stages}{

\itemize{
\item \code{begin} :: Run before the training loop begins.
\item \code{epoch_begin} :: Run he beginning of each epoch.
\item \code{before_validation} :: Run before each validation loop.
\item \code{batch_begin} :: Run before the forward call.
\item \code{after_backward} :: Run after the backward call.
\item \code{batch_end} :: Run after the optimizer step.
\item \code{batch_valid_begin} :: Run before the forward call in the validation loop.
\item \code{batch_valid_end} :: Run after the forward call in the validation loop.
\item \code{epoch_end} :: Run at the end of each epoch.
\item \code{end} :: Run at last, using \code{on.exit()}.
}
}

\seealso{
Other callback: 
\code{\link{as_torch_callbacks}()},
\code{\link{as_torch_callback}()},
\code{\link{callback_torch}()},
\code{\link{mlr3torch_callbacks.progress}},
\code{\link{mlr3torch_callbacks}},
\code{\link{mlr_context_torch}},
\code{\link{torch_callback}()}
}
\concept{callback}
