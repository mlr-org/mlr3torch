% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTorchLayerNorm.R
\name{pipeop_torch_layer_norm}
\alias{pipeop_torch_layer_norm}
\alias{PipeOpTorchLayerNorm}
\title{Layer Normalization}
\format{
\link[R6:R6Class]{R6::R6Class} inheriting from \link{PipeOpTorch}.
}
\arguments{
\item{id}{(\code{character(1)})\cr
The id for of the new object.}

\item{param_vals}{(named \code{list()})\cr
The initial parameters for the object.}
}
\description{
Initializes an instance of this \link[R6:R6Class]{R6} class.
}
\section{Module}{

Calls \code{\link[torch:nn_layer_norm]{torch::nn_layer_norm()}} when trained.
}

\section{Input and Output Channels}{

One input channel called \code{"input"} and one output channel called \code{"output"}.
For an explanation see \code{\link{PipeOpTorch}}.
}

\section{State}{

The state is the value calculated by the public method \code{shapes_out()}.
}

\section{Parameters}{

\itemize{
\item \code{dims} :: \code{integer(1)}\cr
The number of dimensions over which will be normalized (starting from the last dimension).
\item \code{elementwise_affine} :: \code{logical(1)}\cr
Whether to learn affine-linear parameters initialized to \code{1} for weights and to \code{0} for biases.
The default is \code{TRUE}.
\item \code{eps} :: \code{numeric(1)}\cr
A value added to the denominator for numerical stability.
The default is \code{1e-5}.
}
}

\section{Credit}{

Parts of this documentation have been copied or adapted from the R package \link{torch}, that comes under the
MIT license, which is included in the help page of \link{mlr3torch}, as well as in the top-level folder of the
package source.
}

\examples{
# po
obj = po("nn_layer_norm", n_dim = 2)
obj$id
obj$module_generator
obj$shapes_out(c(16, 5, 7))

# pot
obj = pot("layer_norm", n_dim = 2)
obj$id

}
\seealso{
Other PipeOpTorch: 
\code{\link{pipeop_torch_avg_pool1d}},
\code{\link{pipeop_torch_avg_pool2d}},
\code{\link{pipeop_torch_avg_pool3d}},
\code{\link{pipeop_torch_avg_pool}},
\code{\link{pipeop_torch_batch_norm1d}},
\code{\link{pipeop_torch_batch_norm}},
\code{\link{pipeop_torch_conv1d}},
\code{\link{pipeop_torch_conv2d}},
\code{\link{pipeop_torch_conv3d}},
\code{\link{pipeop_torch_conv_transpose1d}},
\code{\link{pipeop_torch_conv_transpose2d}},
\code{\link{pipeop_torch_conv_transpose3d}},
\code{\link{pipeop_torch_conv_transpose}},
\code{\link{pipeop_torch_conv}},
\code{\link{pipeop_torch_dropout}},
\code{\link{pipeop_torch_elu}},
\code{\link{pipeop_torch_flatten}},
\code{\link{pipeop_torch_head}},
\code{\link{pipeop_torch_linear}},
\code{\link{pipeop_torch_max_pool1d}},
\code{\link{pipeop_torch_max_pool2d}},
\code{\link{pipeop_torch_max_pool3d}},
\code{\link{pipeop_torch_max_pool}},
\code{\link{pipeop_torch_merge_cat}},
\code{\link{pipeop_torch_merge_prod}},
\code{\link{pipeop_torch_merge_sum}},
\code{\link{pipeop_torch_merge}},
\code{\link{pipeop_torch_reshape}},
\code{\link{pipeop_torch_softmax}},
\code{\link{pipeop_torch_squeeze}}
}
\concept{PipeOpTorch}
