# r cmd check workflow of the mlr3 ecosystem v0.2.0
# https://github.com/mlr-org/actions
on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '0 4 * * 1'


name: r-cmd-check

jobs:
  r-cmd-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      TORCH_INSTALL: 1
      INCLUDE_IGNORED: "true"

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest,   r: 'devel'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Install additional packages
        run: |
          Rscript -e 'install.packages("rappdirs")'

      - name: Get torchvision package version (Linux/macOS)
        if: runner.os != 'Windows'
        id: get_package_version_unix
        run: |
          echo "TORCHVISION_PACKAGE_VERSION=$(Rscript -e 'cat(as.character(packageVersion("torchvision")))')" >> $GITHUB_ENV

      - name: Get torchvision package version (Windows)
        if: runner.os == 'Windows'
        id: get_package_version_windows
        run: |
          $version = Rscript -e 'cat(as.character(packageVersion("torchvision")))' 
          echo "TORCHVISION_PACKAGE_VERSION=$version" >> $env:GITHUB_ENV

      - name: Get torch cache path (Linux/macOS)
        if: runner.os != 'Windows'
        id: get_cache_path_unix
        run: |
          echo "TORCH_CACHE_PATH=$(Rscript -e 'cat(rappdirs::user_cache_dir("torch"))')" >> $GITHUB_ENV

      - name: Get torch cache path (Windows)
        if: runner.os == 'Windows'
        id: get_cache_path_windows
        run: |
          $cachePath = Rscript -e 'cat(rappdirs::user_cache_dir("torch"))'
          echo "TORCH_CACHE_PATH=$cachePath" >> $env:GITHUB_ENV

      - name: Cache Torchvision Downloads
        uses: actions/cache@v3
        with:
          path: ${{ env.TORCH_CACHE_PATH }}
          key: ${{ runner.os }}-r-${{ env.TORCHVISION_PACKAGE_VERSION }}

      - uses: r-lib/actions/check-r-package@v2

      - uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
